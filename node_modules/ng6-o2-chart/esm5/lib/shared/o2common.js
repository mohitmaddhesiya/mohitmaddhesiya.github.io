/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as d3 from 'd3';
var O2Common = /** @class */ (function () {
    function O2Common(svgContainer, configData, autoMaxX, autoMaxY, svgWidth, svgHeight) {
        this.svgContainer = svgContainer;
        this.configData = configData;
        this.autoMaxX = autoMaxX;
        this.autoMaxY = autoMaxY;
        this.svgWidth = svgWidth;
        this.svgHeight = svgHeight;
    }
    Object.defineProperty(O2Common.prototype, "axisClassName", {
        get: /**
         * @return {?}
         */
        function () {
            return this.configData.className.axis;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "lineClassName", {
        get: /**
         * @return {?}
         */
        function () {
            return this.configData.className.line;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "axisXBorderLineClassName", {
        get: /**
         * @return {?}
         */
        function () {
            return this.configData.className.axisXBorder;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "maxXValue", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _maxX = this.autoMaxX;
            if (!this.configData.maxValue.auto) {
                _maxX = this.configData.maxValue.x;
            }
            return _maxX;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "maxYValue", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _maxY = this.autoMaxY;
            if (!this.configData.maxValue.auto) {
                _maxY = this.configData.maxValue.y;
            }
            return _maxY;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "graphInitXPos", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _intX = this.configData.margin.left;
            if (this.configData.legend.display && this.configData.legend.position !== 'right') {
                _intX = this.configData.margin.left
                    + this.configData.legend.totalWidth;
            }
            return _intX;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "graphInitYPos", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _intY = this.configData.margin.top
                + this.configData.title.height;
            return _intY;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "graphYScale", {
        get: /**
         * @return {?}
         */
        function () {
            return this.graphHeight / this.maxYValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "graphXScale", {
        get: /**
         * @return {?}
         */
        function () {
            return this.graphWidth / this.maxXValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "graphWidth", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _margin = this.configData.margin.left
                + this.configData.margin.right;
            if (this.configData.legend.display) {
                _margin += this.configData.legend.totalWidth;
            }
            return this.svgWidth - _margin;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "graphHeight", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _h = this.svgHeight
                - this.configData.title.height
                - this.configData.margin.top
                - this.configData.margin.bottom;
            return _h;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "graphCenterPos", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _xyArray = new Array();
            var /** @type {?} */ _x = this.configData.margin.left
                + this.graphWidth / 2;
            var /** @type {?} */ _y = this.configData.margin.top
                + this.configData.title.height
                + this.graphHeight / 2;
            _xyArray.push(_x);
            _xyArray.push(_y);
            return _xyArray;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "graphCenterTranslatePos", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _x = this.configData.margin.left
                + this.graphWidth / 2;
            var /** @type {?} */ _y = this.configData.margin.top
                + this.configData.title.height
                + this.graphHeight / 2;
            return 'translate(' + String(_x) + ', ' + String(_y) + ')';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "graphInitTranslatePos", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _x = this.graphInitXPos;
            var /** @type {?} */ _y = this.graphInitYPos;
            return 'translate(' + String(_x) + ', ' + String(_y) + ')';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "axisXLabelInitXPos", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _x = this.configData.margin.left
                + this.configData.axis.xLabel.leftMargin;
            return _x;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "axisXLabelInitYPos", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _y = this.svgHeight
                - this.configData.axis.xLabel.bottomMargin;
            return _y;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "axisTranslatePos", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _x = this.configData.margin.left;
            var /** @type {?} */ _y = this.configData.margin.top
                + this.configData.title.height;
            return 'translate(' + String(_x) + ', ' + String(_y) + ')';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "axisXBorderLineWidth", {
        get: /**
         * @return {?}
         */
        function () {
            return this.configData.axis.borderLineWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "axisYBorderHeight", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _margin = this.configData.margin.top
                + this.configData.margin.bottom
                + this.configData.title.height;
            return this.svgHeight - _margin;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "axisXBorderWidth", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _margin = this.configData.margin.left
                + this.configData.margin.right;
            if (this.configData.legend.display) {
                _margin += this.configData.legend.totalWidth;
            }
            return this.svgWidth - _margin;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "axisYOrient", {
        get: /**
         * @return {?}
         */
        function () {
            return 'left';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "axisXOrient", {
        get: /**
         * @return {?}
         */
        function () {
            return 'bottom';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "axisXBorderTranslatePos", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ sYpos = String(this.svgHeight - this.configData.margin.bottom);
            return 'translate(' + this.configData.margin.left + ', ' + sYpos + ')';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "innerRadiusPercent", {
        get: /**
         * @return {?}
         */
        function () {
            return this.configData.pie.innerRadius.percent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "innerRadiusTitle", {
        get: /**
         * @return {?}
         */
        function () {
            return this.configData.pie.innerRadius.title;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "innerRadiusTitleTranslatePos", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _x = this.configData.margin.left
                + this.graphWidth / 2;
            var /** @type {?} */ _y = this.configData.margin.top
                + this.configData.title.height
                + this.graphHeight / 2
                + 5;
            return 'translate(' + String(_x) + ', ' + String(_y) + ')';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "legendInitXPos", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _x = this.configData.margin.left
                + this.graphWidth
                + this.configData.legend.initXPos;
            if (this.configData.legend.position !== 'right') {
                _x = this.configData.margin.left
                    + this.configData.legend.initXPos;
            }
            return _x;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "legendInitYPos", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _y = this.configData.margin.top
                + this.configData.title.height
                + this.configData.legend.initYPos;
            return _y;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "gridYStep", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _maxY = Math.ceil(this.maxYValue / 100) * 10;
            var /** @type {?} */ _lineNum = 10;
            var /** @type {?} */ _step = Math.ceil(_maxY / _lineNum) * _lineNum;
            return _step;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "gridXStep", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _maxX = Math.ceil(this.maxXValue / 100) * 10;
            var /** @type {?} */ _lineNum = 10;
            var /** @type {?} */ _step = Math.ceil(_maxX / _lineNum) * _lineNum;
            return _step;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "titleInitXPos", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _x = this.configData.margin.left
                + (this.graphWidth + this.configData.legend.totalWidth) / 2
                + this.configData.title.leftMargin;
            return _x;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "titleInitYPos", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _y = this.configData.margin.top
                + this.configData.title.height
                - this.configData.title.bottomMargin;
            return _y;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O2Common.prototype, "defaultColorFunc", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ _color;
            if (this.configData.color.auto) {
                if (this.configData.color.defaultColorNumber === '20') {
                    _color = d3.scaleOrdinal(d3.schemeCategory20);
                }
                else {
                    _color = d3.scaleOrdinal(d3.schemeCategory10);
                }
            }
            return _color;
        },
        enumerable: true,
        configurable: true
    });
    return O2Common;
}());
export { O2Common };
function O2Common_tsickle_Closure_declarations() {
    /** @type {?} */
    O2Common.prototype.svgContainer;
    /** @type {?} */
    O2Common.prototype.configData;
    /** @type {?} */
    O2Common.prototype.autoMaxX;
    /** @type {?} */
    O2Common.prototype.autoMaxY;
    /** @type {?} */
    O2Common.prototype.svgWidth;
    /** @type {?} */
    O2Common.prototype.svgHeight;
}
var O2LineData = /** @class */ (function () {
    function O2LineData(data, color, dashedArray, interpolate) {
        this.data = data;
        this.color = color;
        this.dashedArray = dashedArray;
        this.interpolate = interpolate;
    }
    return O2LineData;
}());
export { O2LineData };
function O2LineData_tsickle_Closure_declarations() {
    /** @type {?} */
    O2LineData.prototype.data;
    /** @type {?} */
    O2LineData.prototype.color;
    /** @type {?} */
    O2LineData.prototype.dashedArray;
    /** @type {?} */
    O2LineData.prototype.interpolate;
}
var O2LegendData = /** @class */ (function () {
    function O2LegendData(title, color) {
        this.title = title;
        this.color = color;
    }
    return O2LegendData;
}());
export { O2LegendData };
function O2LegendData_tsickle_Closure_declarations() {
    /** @type {?} */
    O2LegendData.prototype.title;
    /** @type {?} */
    O2LegendData.prototype.color;
}
var O2ScatterPlotData = /** @class */ (function () {
    function O2ScatterPlotData(x, y, r) {
        this.x = x;
        this.y = y;
        this.r = r;
    }
    return O2ScatterPlotData;
}());
export { O2ScatterPlotData };
function O2ScatterPlotData_tsickle_Closure_declarations() {
    /** @type {?} */
    O2ScatterPlotData.prototype.x;
    /** @type {?} */
    O2ScatterPlotData.prototype.y;
    /** @type {?} */
    O2ScatterPlotData.prototype.r;
}
var O2StackBarData = /** @class */ (function () {
    function O2StackBarData(x, y) {
        this.x = x;
        this.y = y;
    }
    return O2StackBarData;
}());
export { O2StackBarData };
function O2StackBarData_tsickle_Closure_declarations() {
    /** @type {?} */
    O2StackBarData.prototype.x;
    /** @type {?} */
    O2StackBarData.prototype.y;
}
var O2IdValueData = /** @class */ (function () {
    function O2IdValueData(id, value) {
        this.id = id;
        this.value = value;
    }
    return O2IdValueData;
}());
export { O2IdValueData };
function O2IdValueData_tsickle_Closure_declarations() {
    /** @type {?} */
    O2IdValueData.prototype.id;
    /** @type {?} */
    O2IdValueData.prototype.value;
}
// export class O2KeyValueData {
//     constructor(
//        public key: string,
// 	   public value: number
//        ) { }
// }
// export class O2DateKVArrayData {
//     constructor(
//        public date: Date,
// 	   public kvArray: Array<O2KeyValueData>
//        ) { }
// }
// export class O2DateStKVArrayData {
//     constructor(
//        public dateSt: string,
// 	   public kvArray: Array<O2KeyValueData>
//        ) { }
// }

//# sourceMappingURL=data:application/json;base64,