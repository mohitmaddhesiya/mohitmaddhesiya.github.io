{"version":3,"file":"ng6-o2-chart.umd.js.map","sources":["ng://ng6-o2-chart/lib/shared/chart-const.ts","ng://ng6-o2-chart/lib/shared/o2common.ts","ng://ng6-o2-chart/lib/ng6-o2-chart.component.ts","ng://ng6-o2-chart/lib/ng6-o2-chart.module.ts"],"sourcesContent":["export const LINE_CHART_TYPE_NAME  = 'line';\r\nexport const BAR_CHART_TYPE_NAME = 'bar';\r\nexport const PIE_CHART_TYPE_NAME = 'pie';\r\nexport const SCATTER_PLOT_CHART_TYPE_NAME = 'scatterPlot';\r\nexport const HISTOGRAM_CHART_TYPE_NAME = 'histogram';\r\nexport const STACK_BAR_CHART_TYPE_NAME = 'stackBar';\r\nexport const GEO_MAP_CHART_TYPE_NAME = 'geoMap';\r\nexport const GEO_ORTHOGRAPHIC_CHART_TYPE_NAME = 'geoOrthographic';\r\nexport const TREE_MAP_CHART_TYPE_NAME = 'treeMap';\r\nexport const PACK_LAYOUT_CHART_TYPE_NAME = 'packLayout';\r\nexport const CHOROPLETH_CHART_TYPE_NAME = 'choropleth';\r\nexport const TREE_CHART_TYPE_NAME = 'tree';\r\nexport const SANKEY_CHART_TYPE_NAME = 'sankey';\r\nexport const FORCE_CHART_TYPE_NAME = 'force' ;\r\n","import * as d3 from 'd3';\r\n\r\n\r\n\r\nexport class O2Common {\r\n\r\n    constructor(\r\n        public svgContainer: any,\r\n        public configData: any,\r\n        public autoMaxX: number,\r\n        public autoMaxY: number,\r\n        public svgWidth: number,\r\n        public svgHeight: number\r\n    ) { }\r\n\r\n// -------------------------------------------\r\n// ----  CLASS NAME  -------------------------\r\n// -------------------------------------------\r\npublic get axisClassName(): string {\r\n    return this.configData.className.axis;\r\n}\r\n\r\npublic get lineClassName(): string {\r\n    return this.configData.className.line;\r\n}\r\n\r\npublic get axisXBorderLineClassName(): string {\r\n    return this.configData.className.axisXBorder;\r\n}\r\n\r\n\r\n\r\n// -------------------------------------------\r\n// ----  MAX VALUE  --------------------------\r\n// -------------------------------------------\r\npublic get maxXValue(): number {\r\n    let _maxX = this.autoMaxX;\r\n    if (!this.configData.maxValue.auto) {\r\n        _maxX = this.configData.maxValue.x;\r\n    }\r\n    return _maxX;\r\n}\r\n\r\npublic get maxYValue(): number {\r\n    let _maxY = this.autoMaxY;\r\n    if (!this.configData.maxValue.auto) {\r\n        _maxY = this.configData.maxValue.y;\r\n    }\r\n    return _maxY;\r\n}\r\n\r\n// -------------------------------------------\r\n// ----  GRAPH -------------------------------\r\n// -------------------------------------------\r\npublic get graphInitXPos(): number {\r\n    let _intX = this.configData.margin.left;\r\n    if (this.configData.legend.display && this.configData.legend.position !== 'right') {\r\n        _intX = this.configData.margin.left\r\n                    + this.configData.legend.totalWidth;\r\n    }\r\n    return _intX;\r\n}\r\n\r\npublic get graphInitYPos(): number {\r\n    const _intY = this.configData.margin.top\r\n                + this.configData.title.height;\r\n    return _intY;\r\n}\r\n\r\npublic get graphYScale(): number {\r\n    return this.graphHeight / this.maxYValue;\r\n}\r\n\r\npublic get graphXScale(): number {\r\n    return this.graphWidth / this.maxXValue;\r\n}\r\n\r\npublic get graphWidth(): number {\r\n    let _margin = this.configData.margin.left\r\n                 + this.configData.margin.right;\r\n    if (this.configData.legend.display) {\r\n        _margin += this.configData.legend.totalWidth;\r\n    }\r\n\r\n    return this.svgWidth - _margin;\r\n}\r\n\r\npublic get graphHeight(): number {\r\n    const _h = this.svgHeight\r\n                - this.configData.title.height\r\n                - this.configData.margin.top\r\n                - this.configData.margin.bottom;\r\n    return _h;\r\n}\r\n\r\npublic get graphCenterPos(): any {\r\n    const _xyArray: Array<number> = new Array();\r\n    const _x = this.configData.margin.left\r\n                + this.graphWidth / 2;\r\n    const _y = this.configData.margin.top\r\n            + this.configData.title.height\r\n            + this.graphHeight / 2;\r\n    _xyArray.push(_x);\r\n    _xyArray.push(_y);\r\n    return _xyArray;\r\n}\r\n\r\npublic get graphCenterTranslatePos(): string {\r\n    const _x = this.configData.margin.left\r\n            + this.graphWidth / 2;\r\n    const _y = this.configData.margin.top\r\n            + this.configData.title.height\r\n            + this.graphHeight / 2;\r\n    return 'translate(' + String(_x) + ', ' + String(_y) + ')';\r\n}\r\n\r\npublic get graphInitTranslatePos(): string {\r\n    const _x = this.graphInitXPos;\r\n    const _y = this.graphInitYPos;\r\n    return 'translate(' + String(_x) + ', ' + String(_y) + ')';\r\n}\r\n\r\n// -------------------------------------------\r\n// ----  AXIS  -------------------------------\r\n// -------------------------------------------\r\npublic get axisXLabelInitXPos(): number {\r\n    const _x = this.configData.margin.left\r\n            + this.configData.axis.xLabel.leftMargin;\r\n    return _x;\r\n}\r\n\r\npublic get axisXLabelInitYPos(): number {\r\n    const _y = this.svgHeight\r\n            - this.configData.axis.xLabel.bottomMargin;\r\n    return _y;\r\n}\r\n\r\npublic get axisTranslatePos(): string {\r\n    const _x = this.configData.margin.left;\r\n    const _y = this.configData.margin.top\r\n            + this.configData.title.height;\r\n    return 'translate(' + String(_x) + ', ' + String(_y) + ')';\r\n}\r\n\r\n\r\npublic get axisXBorderLineWidth(): number {\r\n    return this.configData.axis.borderLineWidth;\r\n}\r\n\r\npublic get axisYBorderHeight(): number {\r\n    const _margin = this.configData.margin.top\r\n                    + this.configData.margin.bottom\r\n                    + this.configData.title.height;\r\n    return this.svgHeight - _margin;\r\n}\r\n\r\npublic get axisXBorderWidth(): number {\r\n    let _margin = this.configData.margin.left\r\n                 + this.configData.margin.right;\r\n    if (this.configData.legend.display) {\r\n        _margin += this.configData.legend.totalWidth;\r\n    }\r\n    return this.svgWidth - _margin;\r\n}\r\n\r\npublic get axisYOrient(): string {\r\n    return 'left';\r\n}\r\n\r\npublic get axisXOrient(): string {\r\n    return 'bottom';\r\n}\r\npublic get axisXBorderTranslatePos(): string {\r\n    const sYpos = String(this.svgHeight - this.configData.margin.bottom);\r\n    return 'translate(' + this.configData.margin.left + ', ' + sYpos + ')';\r\n}\r\n\r\n\r\n\r\n// -------------------------------------------\r\n// ----  RADIUS  -------------------------------\r\n// -------------------------------------------\r\npublic get innerRadiusPercent(): number {\r\n    return this.configData.pie.innerRadius.percent;\r\n}\r\n\r\npublic get innerRadiusTitle(): string {\r\n    return this.configData.pie.innerRadius.title;\r\n}\r\n\r\npublic get innerRadiusTitleTranslatePos(): string {\r\n    const _x = this.configData.margin.left\r\n                + this.graphWidth / 2;\r\n    const _y = this.configData.margin.top\r\n            + this.configData.title.height\r\n            + this.graphHeight / 2\r\n            + 5;\r\n    return 'translate(' + String(_x) + ', ' + String(_y) + ')';\r\n}\r\n\r\n// -------------------------------------------\r\n// ----  LEGEND  -------------------------------\r\n// -------------------------------------------\r\npublic get legendInitXPos(): number {\r\n    let _x = this.configData.margin.left\r\n                + this.graphWidth\r\n                + this.configData.legend.initXPos ;\r\n    if (this.configData.legend.position !== 'right') {\r\n        _x = this.configData.margin.left\r\n             + this.configData.legend.initXPos ;\r\n    }\r\n    return _x;\r\n}\r\n\r\npublic get legendInitYPos(): number {\r\n    const _y = this.configData.margin.top\r\n            + this.configData.title.height\r\n            + this.configData.legend.initYPos;\r\n    return _y;\r\n}\r\n\r\n// -------------------------------------------\r\n// ----  GRID  -------------------------------\r\n// -------------------------------------------\r\npublic get gridYStep(): number {\r\n    const _maxY = Math.ceil(this.maxYValue / 100) * 10;\r\n    const _lineNum = 10;\r\n    const _step = Math.ceil(_maxY / _lineNum) * _lineNum;\r\n    return _step;\r\n}\r\n\r\npublic get gridXStep(): number {\r\n    const _maxX = Math.ceil(this.maxXValue / 100) * 10;\r\n    const _lineNum = 10;\r\n    const _step = Math.ceil(_maxX / _lineNum) * _lineNum;\r\n    return _step;\r\n}\r\n\r\n\r\n// -------------------------------------------\r\n// ----  TITLE  -------------------------------\r\n// -------------------------------------------\r\npublic get titleInitXPos(): number {\r\n    const _x = this.configData.margin.left\r\n            + (this.graphWidth + this.configData.legend.totalWidth) / 2\r\n            + this.configData.title.leftMargin;\r\n    return _x;\r\n}\r\n\r\npublic get titleInitYPos(): number {\r\n    const _y = this.configData.margin.top\r\n            + this.configData.title.height\r\n            - this.configData.title.bottomMargin;\r\n    return _y;\r\n}\r\n\r\n// -------------------------------------------\r\n// ----  COLOR  -------------------------------\r\n// -------------------------------------------\r\npublic get defaultColorFunc(): any {\r\n    let _color: any;\r\n    if (this.configData.color.auto ) {\r\n        if (this.configData.color.defaultColorNumber === '20') {\r\n            _color = d3.scaleOrdinal(d3.schemeCategory20);\r\n        } else {\r\n            _color = d3.scaleOrdinal(d3.schemeCategory10);\r\n        }\r\n    }\r\n    return _color;\r\n}\r\n}\r\n\r\nexport class O2LineData {\r\nconstructor(\r\n    public data: Array<number>,\r\n    public color: string,\r\n    public dashedArray: string,\r\n    public interpolate: string\r\n    ) { }\r\n}\r\n\r\n\r\nexport class O2LegendData {\r\nconstructor(\r\n   public title: string,\r\n    public color: string ) { }\r\n\r\n}\r\n\r\nexport class O2ScatterPlotData {\r\nconstructor(\r\n   public x: number,\r\n   public y: number,\r\n   public r: number ) { }\r\n\r\n}\r\n\r\nexport class O2StackBarData {\r\nconstructor(\r\n   public x: string,\r\n   public y: number\r\n   ) { }\r\n\r\n}\r\n\r\nexport class O2IdValueData {\r\nconstructor(\r\n   public id: number,\r\n    public value: number\r\n   ) { }\r\n\r\n}\r\n\r\n// export class O2KeyValueData {\r\n//     constructor(\r\n//        public key: string,\r\n// \t   public value: number\r\n//        ) { }\r\n// }\r\n// export class O2DateKVArrayData {\r\n//     constructor(\r\n//        public date: Date,\r\n// \t   public kvArray: Array<O2KeyValueData>\r\n//        ) { }\r\n// }\r\n// export class O2DateStKVArrayData {\r\n//     constructor(\r\n//        public dateSt: string,\r\n// \t   public kvArray: Array<O2KeyValueData>\r\n//        ) { }\r\n// }","import {Component, Directive, Input, OnInit, Inject, ElementRef } from '@angular/core';\nimport {Output, OnChanges, SimpleChange} from '@angular/core';\nimport {O2Common, O2LegendData, O2ScatterPlotData, O2StackBarData, O2LineData, O2IdValueData} from './shared/o2common';\n\nimport * as ChartConst from './shared/chart-const';\nimport * as d3 from 'd3';\n\n@Component({\n  selector: 'lib-Ng6O2Chart',\n  template: ``,\n  styles: []\n})\nexport class Ng6O2ChartComponent implements  OnInit , OnChanges {\n  @Input() chartType: string;\n  @Input() svgWidth: string;\n  @Input() svgHeight: string;\n  @Input() graphData: Array<number>;\n  @Input() configData: any;\n  root: any;\n\n  constructor( elementRef: ElementRef ) {\n    console.log('el:HTMLElement-------------------');\n    const el: HTMLElement    = elementRef.nativeElement;\n    this.root = d3.select(el);\n}\n\nngOnInit() {\n}\n\nngOnChanges(changes: {[propertyName: string]: SimpleChange}) {\n  const svgWidth = parseInt(this.svgWidth, 10);\n  const svgHeight = parseInt(this.svgHeight, 10);\n  const dataSet = this.graphData;\n  const configData = this.configData;\n  const chartType = this.chartType;\n  const svgContainer = this.root.append('svg')\n            .attr('width', svgWidth)\n            .attr('height', svgHeight);\n\n  console.log(chartType);\n  switch (chartType) {\n    case ChartConst.LINE_CHART_TYPE_NAME:\n      this.buildLine(svgContainer, configData, dataSet, svgWidth, svgHeight);\n      break;\n    case ChartConst.BAR_CHART_TYPE_NAME:\n      this.buildBar(svgContainer, configData, dataSet, svgWidth, svgHeight );\n      break;\n    case ChartConst.PIE_CHART_TYPE_NAME:\n      this.buildPie(svgContainer, configData, dataSet, svgWidth, svgHeight );\n      break;\n    case ChartConst.SCATTER_PLOT_CHART_TYPE_NAME:\n      this.buildScatterPlot(svgContainer, configData, dataSet, svgWidth, svgHeight );\n      break;\n    case ChartConst.HISTOGRAM_CHART_TYPE_NAME:\n      this.buildHistogram(svgContainer, configData, dataSet, svgWidth, svgHeight );\n      break;\n    case ChartConst.STACK_BAR_CHART_TYPE_NAME:\n      this.buildStackBar(svgContainer, configData, dataSet, svgWidth, svgHeight );\n      break;\n    case ChartConst.GEO_MAP_CHART_TYPE_NAME:\n      this.buildGeoMap(svgContainer, configData, dataSet, svgWidth, svgHeight );\n      break;\n    case ChartConst.GEO_ORTHOGRAPHIC_CHART_TYPE_NAME:\n      this.buildGeoOrthographic(svgContainer, configData, dataSet, svgWidth, svgHeight );\n      break;\n    case ChartConst.TREE_CHART_TYPE_NAME:\n      this.buildTree(svgContainer, configData, dataSet, svgWidth, svgHeight );\n      break;\n    case ChartConst.PACK_LAYOUT_CHART_TYPE_NAME:\n      this.buildPackLayout(svgContainer, configData, dataSet, svgWidth, svgHeight );\n      break;\n    case ChartConst.CHOROPLETH_CHART_TYPE_NAME:\n      this.buildChoropleth(svgContainer, configData, dataSet, svgWidth, svgHeight );\n      break;\n    case ChartConst.FORCE_CHART_TYPE_NAME:\n      this.buildForce(svgContainer, configData, dataSet, svgWidth, svgHeight );\n      break;\n    case ChartConst.TREE_MAP_CHART_TYPE_NAME:\n      //  this.buildTreeMap(svgContainer,configData, dataSet,svgWidth,svgHeight );\n      break;\n    case ChartConst.SANKEY_CHART_TYPE_NAME:\n      //  this.buildSankey(svgContainer,configData, dataSet,svgWidth,svgHeight );\n      break;\n    default:\n      break;\n  }\n}\n\n\n\nprivate buildHistogram(svgContainer: any, configData: any, dataSetJson: any, svgWidth: number, svgHeight: number): void {\n\n  console.log('in buildHistogram-------------------');\n\n  const dataSet = dataSetJson.data;\n  const _binNumber = dataSetJson.bins.length - 1;\n\n  const _maxY = 300; // dummy number\n  const _maxX = dataSetJson.range[1];\n  const cdt = new O2Common(svgContainer, configData, _maxX, _maxY, svgWidth, svgHeight);\n  const _graphWidth = cdt.graphWidth;\n  const _graphHeight = cdt.graphHeight;\n  const _maxYValue = cdt.maxYValue;\n  const _graphXScale = cdt.graphXScale;\n  const _graphInitX = cdt.graphInitXPos;\n  const _graphInitY = cdt.graphInitYPos;\n\n  const _titleDisplay = configData.title.display;\n  const _animation = configData.animation.enable;\n  const _animationDuration = configData.animation.duration;\n  const _gridYDisplay = configData.grid.y.display;\n  const _marginLeft = configData.margin.left;\n  const _marginTop = configData.margin.top;\n  const _className = configData.className.histogramBar;\n\n\n  const _dataSet: Array<number> = new Array();\n  for (const i in dataSet) {\n      if (dataSet.hasOwnProperty(i)) {\n          const _num = dataSet[i] / _maxX;\n          _dataSet.push(_num);\n      }\n  }\n\n  const formatCount = d3.format(',.0f');\n\n  const _histgramContainer = svgContainer\n                  .append('g')\n                  .attr('transform', 'translate(' + _graphInitX + ',' + _graphInitY + ')');\n\n  const _xScale = d3.scaleLinear()\n      .rangeRound([0, _graphWidth]);\n\n  const bins = d3.histogram()\n      .domain([0, 1])\n      .thresholds(_xScale.ticks(_binNumber))\n      (_dataSet);\n\n\n  const _yScale = d3.scaleLinear()\n      .domain([0, d3.max(bins, (d: any) => {\n          return d.length;\n      })])\n      .range([_graphHeight, 0]);\n\n  const bar = _histgramContainer\n      .selectAll('.bar')\n      .data(bins)\n      .enter()\n      .append('g')\n      .attr('class', _className)\n      .attr('transform', (d: any) => {\n          return 'translate(' + _xScale(d.x0) + ',' + _yScale(d.length) + ')';\n      });\n\n  if (_animation) {\n      bar.append('rect')\n          .attr('x',  1)\n          .attr('width', _xScale(bins[0].x1) - _xScale(bins[0].x0) - 1)\n          .attr('height', 0)\n          .transition()\n          .duration(_animationDuration)\n          .attr('height', (d: any) => {\n              return _graphHeight - _yScale(d.length);\n          });\n  } else {\n      bar.append('rect')\n          .attr('x', 1)\n          .attr('width', _xScale(bins[0].x1) - _xScale(bins[0].x0) - 1)\n          .attr('height', (d: any) => {\n              return _graphHeight - _yScale(d.length);\n          });\n  }\n\n  bar.append('text')\n      .attr('dy', '.75em')\n      .attr('y', 6)\n      .attr('x', (_xScale(bins[0].x1) - _xScale(bins[0].x0)) / 2)\n      .attr('text-anchor', 'middle')\n      .text((d: any) => {\n          return formatCount(d.length);\n      });\n\n  // ---CALL buildTitle-----------------\n  if (_titleDisplay) {\n      this.drawTitle(cdt);\n  }\n  // ------------------------------------\n  // ---CALL buildAxis-----------------\n  this.buildYAxis(cdt);\n\n  this.buildXAxis(cdt);\n\n   if (_gridYDisplay) {\n      this.drawYGrid(cdt);\n  }\n}\n\n\n\nprivate buildForce(svgContainer: any, configData: any, dataSetJson: any, svgWidth: number, svgHeight: number): void {\n\n  console.log('In  buildFoce----------------');\n\n  const _maxX = 100;\n  const _maxY = 100;\n  const cdt = new O2Common(svgContainer, configData, _maxX, _maxY, svgWidth, svgHeight);\n\n  const _color = cdt.defaultColorFunc;\n  const _initPosX = cdt.graphInitXPos;\n  const _initPosY = cdt.graphInitYPos;\n  const _centerPos = cdt.graphCenterPos;\n  const _graphHeight = cdt.graphHeight;\n  const _graphWidth = cdt.graphWidth;\n\n  const _marginLeft = configData.margin.left;\n  const _marginTop = configData.margin.top;\n\n\n  const simulation = d3.forceSimulation()\n      .force('link', d3.forceLink().id((d: any) => {\n          return d.id;\n      }))\n      .force('charge', d3.forceManyBody())\n      .force('center', d3.forceCenter(_graphWidth / 2, _graphHeight / 2));\n\n\n  const _forceContainer = svgContainer\n    .append('g')\n    .attr('transform',\n      'translate(' + _marginLeft + ',' + _marginTop + ')');\n\n  const link = _forceContainer.append('g')\n      .attr('class', 'force-links')\n      .selectAll('line')\n      .data(dataSetJson.links)\n      .enter()\n      .append('line')\n      .attr('stroke-width', (d: any) => {\n          return Math.sqrt(d.value);\n      });\n\n  const node = _forceContainer.append('g')\n      .attr('class', 'nodes')\n      .selectAll('circle')\n      .data(dataSetJson.nodes)\n      .enter()\n      .append('circle')\n      .attr('r', 5)\n      .attr('fill', (d: any) => {\n          return _color(d.group);\n      })\n      .call(d3.drag()\n          .on('start', dragstarted)\n          .on('drag', dragged)\n          .on('end', dragended));\n\n      node.append('title')\n          .text((d: any) => {\n              return d.id;\n          });\n\n  simulation\n      .nodes(dataSetJson.nodes)\n      .on('tick', ticked);\n\n  const _forceLink: any = simulation.force('link');\n  _forceLink.links(dataSetJson.links);\n\n  function ticked() {\n      link\n          .attr('x1', (d: any) => {\n             return d.source.x; })\n          .attr('y1', (d: any) => {\n            return d.source.y; })\n          .attr('x2', (d: any) => {\n             return d.target.x; })\n          .attr('y2', (d: any) => {\n             return d.target.y; });\n\n      node\n          .attr('cx', (d: any) => {\n             return d.x; })\n          .attr('cy', (d: any) => {\n             return d.y; });\n  }\n\n  function dragstarted(d: any)  {\n      if (!d3.event.active) {\n          simulation.alphaTarget(0.3).restart();\n      }\n      d.fx = d.x;\n      d.fy = d.y;\n  }\n\n  function dragged(d: any)  {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n  }\n\n  function dragended(d: any)  {\n      if (!d3.event.active) {\n          simulation.alphaTarget(0);\n      }\n      d.fx = null;\n      d.fy = null;\n  }\n\n  //  ------------------------------------\n  //  ---CALL buildLegend-----------------\n  const _legendDataSet: Array<O2LegendData> = new Array();\n  for (const i in dataSetJson.groups) {\n      if (dataSetJson.groups.hasOwnProperty(i)) {\n          const _id = dataSetJson.groups[i].id;\n          _legendDataSet.push(new O2LegendData(dataSetJson.groups[i].name, _color(_id)));\n      }\n  }\n  this.buildLegend(cdt, _legendDataSet);\n\n\n\n}\n\n\nprivate buildChoropleth(svgContainer: any, configData: any, dataSetJson: any, svgWidth: number, svgHeight: number): void {\n\n  console.log('in buildChoropleth -------------------');\n\n  const _maxX = 100; // any value\n  const _maxY = 100; // any value\n  const cdt = new O2Common(svgContainer, configData, _maxX, _maxY, svgWidth, svgHeight);\n  const _graphCenterPos = cdt.graphCenterPos;\n  const _graphInitX = cdt.graphInitXPos;\n  const _graphInitY = cdt.graphInitYPos;\n\n\n  const _titleDisplay = configData.title.display;\n  const _legendDisplay = configData.legend.display;\n  const _focusColor = configData.color.focusColor;\n\n  const _scale = dataSetJson.map.scale;\n  const _targetName = dataSetJson.map.targetName;\n  const _keyDataName = dataSetJson.map.keyDataName;\n  const _keyName = 'data.' + _keyDataName;\n  const _geoMapDataUrl = dataSetJson.map.baseGeoDataUrl;\n  const _startColor = dataSetJson.map.startColor;\n  const _endColor = dataSetJson.map.endColor;\n  const _colorNum = dataSetJson.map.colorNumber;\n  const _center = dataSetJson.map.center;\n  const _targetPropertyName = dataSetJson.map.targetPropertyName;\n  const _targetProperty = 'd.' + _targetPropertyName;\n\n  const color = d3.interpolateHsl(_startColor, _endColor);\n\n  let _max = dataSetJson.data[0].value;\n  let _min = dataSetJson.data[0].value;\n  for (const i in dataSetJson.data) {\n      if (dataSetJson.data.hasOwnProperty(i)) {\n          if (_max < dataSetJson.data[i].value) {\n              _max = dataSetJson.data[i].value;\n          }\n          if (_min > dataSetJson.data[i].value) {\n              _min = dataSetJson.data[i].value;\n          }\n      }\n  }\n  const _range = _max - _min;\n  const _step = _range / (_colorNum - 1);\n\n  const _findColorById = (id: number): string => {\n      for (const i in dataSetJson.data) {\n          if (dataSetJson.data.hasOwnProperty(i)) {\n              if (id === dataSetJson.data[i].id) {\n                  const _value = dataSetJson.data[i].value;\n                  const _rate = Math.ceil((_value - _min) / _step);\n                  return color(_rate / _max);\n              }\n          }\n      }\n  };\n\n  const path = d3.geoPath()\n              .projection(\n                  d3.geoMercator()\n                  .center(_center)\n                  .scale(_scale)\n                  .translate(_graphCenterPos)\n              );\n\n  d3.json(_geoMapDataUrl, (error, data) => {\n      svgContainer.selectAll('path')\n              .data(eval(_keyName))\n              .enter()\n              .append('path')\n              .attr('d', path)\n              .style('fill', (d: any, i: number) =>  {\n                  const _cl = _findColorById(eval(_targetProperty));\n                  return _cl;\n              });\n  });\n\n  // ------------------------------------\n  // ---CALL buildTitle-----------------\n  if (_titleDisplay) {\n      this.drawTitle(cdt);\n  }\n\n  //  ------------------------------------\n  //  ---CALL buildLegend-----------------\n  if (_legendDisplay) {\n      const _legendDataSet: Array<O2LegendData> = new Array();\n      for (let i = 0; i < _colorNum; i++) {\n          const _label = String(_min + (i * _step)) +  ' --';\n          _legendDataSet.push(new O2LegendData(_label, color(i / _max)));\n      }\n      this.buildLegend(cdt, _legendDataSet);\n  }\n\n}\n\nprivate buildPackLayout(svgContainer: any, configData: any, dataSetJson: any, svgWidth: number, svgHeight: number): void {\n\n  console.log('in PackLayout------------------');\n\n  const _packlayoutClass = configData.className.packlayout;\n  const _packlayoutLabelClass = configData.className.packlayoutLabel;\n  const _animation = configData.animation.enable;\n  const _animationDuration = configData.animation.duration;\n  const color = d3.scaleOrdinal(d3.schemeCategory10);\n  //  const color = d3.scale.category10();\n  const bubble = d3.pack()\n                  .size([svgWidth, svgHeight]);\n\n  const nodes0 = d3.hierarchy(dataSetJson);\n\n  const pack =  svgContainer.selectAll('g')\n              .data(bubble(nodes0).descendants())\n              .enter()\n              .append('g')\n              .attr('transform', (d: any, i: number) =>  {\n                  return 'translate(' + d.x + ',' + d.y + ')';\n              });\n\n  const _circle = pack.append('circle');\n  if (_animation) {\n      _circle.attr('r', 0)\n              .transition()\n              .duration((d: any, i: number) =>  {\n                  return d.depth * _animationDuration  + 500;\n              })\n              .attr('r', (d: any) => {\n                  return d.r;\n              })\n              .style('fill', (d: any, i: any) =>  {\n                  return color(i);\n              });\n  } else {\n      _circle.attr('r', (d: any) => {\n                  return d.r;\n              })\n              .style('fill', (d: any, i: any) =>  {\n                  return color(i);\n              });\n  }\n\n  const _text = pack.append('text')\n              .attr('class', _packlayoutLabelClass)\n              .text((d: any, i: number) =>  {\n                  if (d.depth === 1) {\n                      return d.data.name;\n                  }\n                  return null;\n              });\n\n  if (_animation) {\n      _text.style('opacity', 0)\n          .transition()\n          .duration(_animationDuration)\n          .style('opacity', 1.0);\n  } else {\n      _text.style('opacity', 1.0);\n  }\n\n}\n\nprivate buildTree(svgContainer: any, configData: any, dataSetJson: any, svgWidth: number, svgHeight: number): void {\n\n  console.log('In  buildTree----------------');\n\n  let _maxX = 0;\n  let _maxY = 0;\n  _maxY = 100;\n  _maxX = 100;\n  const cdt = new O2Common(svgContainer, configData, _maxX, _maxY, svgWidth, svgHeight);\n\n  const _color = cdt.defaultColorFunc;\n  const _initPosX = cdt.graphInitXPos;\n  const _initPosY = cdt.graphInitYPos;\n  const _graphHeight = cdt.graphHeight;\n  const _graphWidth = cdt.graphWidth;\n\n  const _animation = configData.animation.enable;\n  const _animationDuration = configData.animation.duration;\n  const _treemapClass = configData.className.treemap;\n  const _treemapLabelClass = configData.className.treemapLabel;\n  const _marginLeft = configData.margin.left;\n  const _marginTop = configData.margin.top;\n\n\n  const tree = d3.tree()\n                  .size([_graphWidth, _graphHeight]);\n\n  const nodes0 = d3.hierarchy(dataSetJson);\n\n  const nodes = tree(nodes0);\n\n  const _treeContainer = svgContainer\n    .append('g')\n    .attr('transform',\n      'translate(' + _marginLeft + ',' + _marginTop + ')');\n\n  const link = _treeContainer\n      .selectAll('.link')\n      .data( nodes.descendants().slice(1))\n      .enter()\n      .append('path')\n      .attr('class', 'tree-node-link')\n      .attr('d', (d: any) => {\n          return 'M' + d.x + ',' + d.y\n              + 'C' + d.x + ',' + (d.y + d.parent.y) / 2\n              + ' ' + d.parent.x + ',' +  (d.y + d.parent.y) / 2\n              + ' ' + d.parent.x + ',' + d.parent.y;\n          }\n      );\n\n  const node = _treeContainer\n      .selectAll('.node')\n      .data(nodes.descendants())\n      .enter()\n      .append('g')\n      .attr('class', (d: any) => {\n          return 'tree-node' +\n          (d.children ? '-internal' : '-leaf');\n      })\n      .attr('transform', (d: any) => {\n          return 'translate(' + d.x + ',' + d.y + ')';\n      });\n\n  node.append('circle')\n      .attr('r', 10);\n\n  node.append('text')\n      .attr('dy', '.35em')\n      .attr('y', (d: any) => {\n          return d.children ? -20 : 20;\n      })\n      .style('text-anchor', 'middle')\n      .text((d: any) => {\n          return d.data.name;\n      });\n\n\n}\n\n\n\nprivate buildGeoOrthographic(svgContainer: any, configData: any, dataSetJson: any, svgWidth: number, svgHeight: number): void {\n\n  console.log('in buildGeoOrthographic -------------------');\n\n  const _maxX = 100; // any value\n  const _maxY = 100; // any value\n  const cdt = new O2Common(svgContainer, configData, _maxX, _maxY, svgWidth, svgHeight);\n  const _graphCenterPos = cdt.graphCenterPos;\n  const _graphInitX = cdt.graphInitXPos;\n  const _graphInitY = cdt.graphInitYPos;\n\n  const _titleDisplay = configData.title.display;\n  const _legendDisplay = configData.legend.display;\n  const _focusColor = configData.color.focusColor;\n\n  const _geoMapDataUrl = dataSetJson.map.baseGeoDataUrl;\n  const _scale = dataSetJson.map.scale;\n  const _targetName = dataSetJson.map.targetName;\n  const _targetProperty = 'd.' + dataSetJson.map.targetPropertyName;\n  const _keyDataName = dataSetJson.map.keyDataName;\n  const _keyName = 'data.' + _keyDataName;\n  const _clipAngle = dataSetJson.map.clipAngle;\n  const _rotateH   = dataSetJson.map.rotate.horizontal;\n  const _rotateV   = dataSetJson.map.rotate.vertical;\n  const _oceanColor = dataSetJson.map.oceanColor;\n  const _antarcticaColor = dataSetJson.map.antarcticaColor;\n  const _animation = configData.animation.enable;\n  const _animationDuration = configData.animation.duration;\n  let _animationH = 0;\n\n  const _findColorByName = (name: string): string => {\n      for (const i in dataSetJson.data) {\n          if (dataSetJson.data.hasOwnProperty(i)) {\n              if (name === dataSetJson.data[i].name) {\n                  const _color = dataSetJson.data[i].color;\n                  return _color;\n              }\n          }\n      }\n      return null;\n  };\n\n  const targetPath = d3.geoOrthographic()\n              .translate(_graphCenterPos)\n              .clipAngle(_clipAngle)\n              .scale(_scale)\n              .rotate([_rotateH, _rotateV]);\n\n  const path = d3.geoPath()\n              .projection(\n                  targetPath\n              );\n\n  d3.json(_geoMapDataUrl, (error, data) => {\n      svgContainer.append('circle')\n          .attr('cx', _graphCenterPos[0])\n          .attr('cy', _graphCenterPos[1])\n          .attr('r', _scale)\n          .style('fill', _oceanColor);\n\n      const earthPath = svgContainer.selectAll('path')\n          .data(eval(_keyName))\n          .enter()\n          .append('path')\n          .attr('d', path)\n          .style('fill', (d: any, i: number) =>  {\n              const _targetArea = eval(_targetProperty);\n              if (_findColorByName(_targetArea) !== null) {\n                  return _findColorByName(_targetArea);\n              }\n\n              return 'hsl(' + i + ',80%,60%)';\n          });\n      if (_animation) {\n          d3.timer(() => {\n              targetPath.rotate([_rotateH + _animationH, _rotateV]);\n              _animationH += 2;\n              earthPath.attr('d', path);\n          });\n      }\n  });\n\n  // ------------------------------------\n  // ---CALL buildTitle-----------------\n  if (_titleDisplay) {\n      this.drawTitle(cdt);\n  }\n\n  if (_legendDisplay) {\n      const _legendDataSet: Array<O2LegendData> = new Array();\n      for (const i in dataSetJson.data) {\n          if (dataSetJson.data.hasOwnProperty(i)) {\n              const _name = dataSetJson.data[i].name;\n              const _color = dataSetJson.data[i].color;\n              if (_name === 'Antarctica') {\n                  continue;\n              }\n              _legendDataSet.push(new O2LegendData(dataSetJson.data[i].name, dataSetJson.data[i].color));\n          }\n      }\n      this.buildLegend(cdt, _legendDataSet);\n  }\n\n\n}\n\n\n\nprivate buildGeoMap(svgContainer: any, configData: any, dataSetJson: any, svgWidth: number, svgHeight: number): void {\n\n  console.log('in buildGeoMap -------------------');\n\n  const _maxX = 100; // any value\n  const _maxY = 100; // any value\n  const cdt = new O2Common(svgContainer, configData, _maxX, _maxY, svgWidth, svgHeight);\n  const _graphCenterPos = cdt.graphCenterPos;\n  const _geoMapDataUrl =  dataSetJson.map.baseGeoDataUrl;\n  const _scale = dataSetJson.map.scale;\n  const _keyDataName = dataSetJson.map.keyDataName;\n  const _keyName = 'data.' + _keyDataName;\n  const _targetProperty = 'd.' + dataSetJson.map.targetPropertyName;\n  const _antarcticaColor = dataSetJson.map.antarcticaColor;\n  const _legendDisplay = configData.legend.display;\n\n  const path = d3.geoPath()\n              .projection(\n                  d3.geoMercator()\n                  .translate(_graphCenterPos)\n                  .scale(_scale)\n              );\n\n  const _findColorByName = (name: string): string => {\n      for (const i in dataSetJson.data) {\n          if (dataSetJson.data.hasOwnProperty(i)) {\n              if (name === dataSetJson.data[i].name) {\n                  const _color = dataSetJson.data[i].color;\n                  return _color;\n              }\n          }\n      }\n      return null;\n  };\n\n  d3.json(_geoMapDataUrl, (error, data) => {\n      svgContainer.selectAll('path')\n              .data(eval(_keyName))\n              .enter()\n              .append('path')\n              .attr('d', path)\n              .style('fill', (d: any, i: number) =>  {\n                  const _targetArea = eval(_targetProperty);\n                  if (_findColorByName(_targetArea) !== null) {\n                      return _findColorByName(_targetArea);\n                  }\n                  return 'hsl(' + i + ',80%,60%)';\n              });\n      });\n\n  //  ------------------------------------\n  //  ---CALL buildLegend-----------------\n  if (_legendDisplay) {\n      const _legendDataSet: Array<O2LegendData> = new Array();\n      for (const i in dataSetJson.data) {\n          if (dataSetJson.data.hasOwnProperty(i)) {\n              const _name = dataSetJson.data[i].name;\n              const _color = dataSetJson.data[i].color;\n              if (_name === 'Antarctica') {\n                  continue;\n              }\n              _legendDataSet.push(new O2LegendData(dataSetJson.data[i].name, dataSetJson.data[i].color));\n          }\n      }\n      this.buildLegend(cdt, _legendDataSet);\n  }\n\n}\n\n\n\nprivate buildStackBar(svgContainer: any, configData: any, dataSetJson: any, svgWidth: number, svgHeight: number): void {\n\n  console.log('in buildStackBar-------------------');\n\n  interface HashString {\n    [index: string]: string;\n  }\n  interface HashNumber {\n    [key: string]: number;\n  }\n\n  const _totalY: Array<number> = new Array();\n  for (const i in dataSetJson.data) {\n      if (dataSetJson.data.hasOwnProperty(i)) {\n         _totalY.push(0);\n      }\n  }\n\n  for (const i in dataSetJson.data) {\n      if (dataSetJson.data.hasOwnProperty(i)) {\n          let k = 0;\n          for (const j in dataSetJson.data[i].value) {\n              if (dataSetJson.data[i].value.hasOwnProperty(j)) {\n                  _totalY[k++] += dataSetJson.data[i].value[j].y;\n              }\n          }\n      }\n  }\n  let _maxX = 0;\n  let _maxY = 0;\n  _maxY = d3.max(_totalY);\n  _maxX = 100;\n  const cdt = new O2Common(svgContainer, configData, _maxX, _maxY, svgWidth, svgHeight);\n\n  const _color = cdt.defaultColorFunc;\n  const _columnNum =  dataSetJson.data.length;\n  const _barWidth = (cdt.graphWidth / _columnNum) - configData.margin.between;\n  const _columnWidth = (cdt.graphWidth / _columnNum) ;\n  const _initPosX = cdt.graphInitXPos;\n  const _initPosY = cdt.graphInitYPos;\n  const _graphHeight = cdt.graphHeight;\n  const _maxYValue = cdt.maxYValue;\n\n  const _opacity = configData.color.opacity;\n  const _legendDisplay = configData.legend.display;\n  const _gridYDisplay = configData.grid.y.display;\n  const _gridXDisplay = configData.grid.x.display;\n  const _labelDisplay = configData.label.display;\n  const _animation = configData.animation.enable;\n  const _animationDuration = configData.animation.duration;\n\n  //  Get Data Name\n  const _seriesDateName = dataSetJson.series[0];\n\n  //  Get Keys\n  const _keyArray: Array<string> = new Array();\n  for (const i in dataSetJson.data) {\n      if (dataSetJson.data.hasOwnProperty(i)) {\n          const _key = dataSetJson.data[i].name;\n          const _value = dataSetJson.data[i].value[0].y;\n          _keyArray.push(_key);\n      }\n  }\n\n  //  Get Date String\n  const _dateArray: Array<string> = new Array();\n  for (const i in dataSetJson.data[0].value) {\n      if (dataSetJson.data[0].value.hasOwnProperty(i)) {\n          const _xValue = dataSetJson.data[0].value[i].x;\n          _dateArray.push(_xValue);\n      }\n  }\n\n  const _hashArray: Array<any> = new Array();\n  for (const i in _dateArray) {\n      if (_dateArray.hasOwnProperty(i)) {\n          const _dateSt = _dateArray[i];\n          const _hashNumber: HashNumber = { };\n          for (const j in _keyArray) {\n              if (_keyArray.hasOwnProperty(j)) {\n                  const _key = _keyArray[j];\n                  const _value = dataSetJson.data[j].value[i].y;\n                  _hashNumber[_key]  = _value;\n              }\n          }\n          _hashArray.push(_hashNumber);\n      }\n  }\n\n  const yScale = d3.scaleLinear()\n                  .domain([0, _maxYValue])\n                  .range([0, _graphHeight]);\n\n\n  const stack = d3.stack();\n  const _rect = svgContainer.selectAll('g')\n      .data(stack.keys(_keyArray)(_hashArray))\n      .enter()\n      .append('g')\n      .attr('fill', (d: any, i: number) => {\n          return _color(i);\n      } )\n      .attr('fill-opacity', _opacity)\n      .selectAll('rect')\n      .data((d: any, i: number) => {\n          return d;\n      })\n      .enter()\n      .append('rect');\n\n\n\n  if (_animation) {\n      _rect.attr('x', (d: any, i: number) => {\n          return _initPosXã + ãi * _columnWidth;\n      })\n      .attr('height',  0)\n      .attr('y', (d: any, i: number) => {\n          const nm = 'd.data.' + _keyArray[i];\n          const _yValue = eval(nm);\n          return svgHeight - configData.margin.bottom - yScale(d[1]);\n      })\n      .attr('width', _barWidth)\n      .transition()\n      .duration(_animationDuration)\n      .attr('height', (d: any, i: number) => {\n          return yScale(d[1] - d[0]);\n      });\n  } else {\n      _rect.attr('x', (d: any, i: number) => {\n          return _initPosX + (i * _columnWidth);\n      })\n      .attr('y', (d: any, i: number) => {\n          const nm = 'd.data.' + _keyArray[i];\n          const _yValue = eval(nm);\n          return svgHeight - configData.margin.bottom - yScale(d[1]);\n      })\n      .attr('width', _barWidth)\n      .attr('height', (d: any, i: number) => {\n          return yScale(d[1] - d[0]);\n      });\n  }\n\n\n  // ------------------------------------\n  // ---CALL buildTitle-----------------\n  this.drawTitle(cdt);\n\n  // ------------------------------------\n  // ---CALL buildAxis-----------------\n  this.buildYAxis(cdt);\n\n  this.drawXBaseLine(cdt);\n\n  //  ------------------------------------\n  //  ---CALL drawXAxisLabel-----------------\n  if (_labelDisplay) {\n      const _labelArray:  Array<string> = new Array();\n      for (const i in dataSetJson.data[0].value) {\n          if (dataSetJson.data[0].value.hasOwnProperty(i)) {\n              _labelArray.push(dataSetJson.data[0].value[i].x);\n          }\n      }\n      this.drawXAxisLabel(cdt, _labelArray, ChartConst.STACK_BAR_CHART_TYPE_NAME);\n  }\n\n\n  //  ------------------------------------\n  //  ---CALL buildLegend-----------------\n  if (_legendDisplay) {\n      const _legendDataSet: Array<O2LegendData> = new Array();\n      for (const i in dataSetJson.data) {\n          if (dataSetJson.data.hasOwnProperty(i)) {\n              _legendDataSet.push(new O2LegendData(dataSetJson.data[i].name, _color(i)));\n          }\n      }\n      this.buildLegend(cdt, _legendDataSet);\n  }\n\n  if (_gridYDisplay) {\n      this.drawYGrid(cdt);\n  }\n\n}\n\nprivate buildScatterPlot(svgContainer: any, configData: any, dataSetJson: any, svgWidth: number, svgHeight: number): void {\n\n  console.log('In  buildScatterPlot----------------');\n\n  const _dataSet: Array<O2ScatterPlotData> = new Array();\n  let _maxX = 0;\n  let _maxY = 0;\n  for (const i in dataSetJson.data) {\n      if (dataSetJson.data.hasOwnProperty(i)) {\n          for (const j in dataSetJson.data[i].value) {\n              if (dataSetJson.data[i].value.hasOwnProperty(j)) {\n                  if (_maxX < dataSetJson.data[i].value[j].x) {\n                      _maxX = dataSetJson.data[i].value[j].x;\n                  }\n                  if (_maxY < dataSetJson.data[i].value[j].y) {\n                      _maxY = dataSetJson.data[i].value[j].y;\n                  }\n                  const _scatterPlotData = new O2ScatterPlotData(\n                      dataSetJson.data[i].value[j].x,\n                      dataSetJson.data[i].value[j].y,\n                      dataSetJson.data[i].value[j].r,\n                  ) ;\n                  _dataSet.push(_scatterPlotData);\n              }\n          }\n      }\n  }\n  const cdt = new O2Common(svgContainer, configData, _maxX, _maxY, svgWidth, svgHeight);\n\n  const _initPosX = cdt.graphInitXPos;\n  const _initPosY = cdt.graphInitYPos;\n\n  const _seriesNumber = dataSetJson.series.length;\n  const _color = cdt.defaultColorFunc;\n  const _opacity = configData.color.opacity;\n  const _gridYDisplay = configData.grid.y.display;\n  const _gridXDisplay = configData.grid.x.display;\n  const _titleDisplay = configData.title.display;\n  const _legendDisplay = configData.legend.display;\n\n  const _circle = svgContainer.selectAll('circle')\n          .data(_dataSet)\n          .enter()\n          .append('circle')\n          .attr('cx', (d: O2ScatterPlotData, i: any): number => {\n              return _initPosX + d.x;\n          })\n          .attr('cy', (d: O2ScatterPlotData, i: any): number => {\n              return (svgHeight - configData.margin.bottom - d.y);\n          })\n          .attr('r', (d: O2ScatterPlotData, i: any): number => {\n              return d.r;\n          })\n          .style('fill', (d: any, i: number) =>  {\n              const _colorNum = i % _seriesNumber;\n              return _color(_colorNum);\n          })\n          .attr('fill-opacity',  _opacity);\n\n\n  // ---CALL buildTitle-----------------\n  if (_titleDisplay) {\n      this.drawTitle(cdt);\n  }\n\n  // ------------------------------------\n  // ---CALL buildLegend-----------------\n  if (_legendDisplay) {\n      const _legendDataSet: Array<O2LegendData> = new Array();\n      for (let i = 0; i < dataSetJson.series.length; i++) {\n          _legendDataSet.push(new O2LegendData(dataSetJson.series[i], _color(i)));\n      }\n      this.buildLegend(cdt, _legendDataSet);\n  }\n  // ------------------------------------\n  // ---CALL buildAxis-----------------\n  this.buildYAxis(cdt);\n\n  this.buildXAxis(cdt);\n\n  if (_gridYDisplay) {\n      this.drawYGrid(cdt);\n  }\n  if (_gridXDisplay) {\n      this.drawXGrid(cdt);\n  }\n}\n\n\n\nprivate drawXGrid(o2Common: any): void {\n\n  console.log('in buildXGrid-------------------');\n\n  const cdt = o2Common;\n  const configData = cdt.configData;\n  const svgContainer = cdt.svgContainer;\n\n  const _stepX =  cdt.gridXStep;\n\n  const _maxX = cdt.maxXValue;\n  const _graphYScale = cdt.graphYScale;\n  const _graphXScale = cdt.graphXScale;\n  const _graphWidth = cdt.graphWidth;\n  const _gridClassName = configData.className.grid;\n  const _axisXScale = d3.scaleLinear()\n                  .domain([0, _maxX])\n                  .range([0, _maxX * _graphXScale]);\n  const _rangeX = d3.range(_stepX * _graphXScale,\n                  _maxX  * _graphXScale,\n                  _stepX * _graphXScale);\n\n  svgContainer.append('g')\n      .selectAll('line.x')\n      .data(_rangeX)\n      .enter()\n      .append('line')\n      .attr('class', _gridClassName)\n      .attr('x1', (d: any, i: number) =>  {\n          const _x1 = configData.margin.left  + d;\n          return _x1;\n      })\n      .attr('y1', cdt.svgHeight - configData.margin.bottom)\n      .attr('x2', (d: any, i: number) =>  {\n          const _x2 = configData.margin.left  + d;\n          return _x2;\n      })\n      .attr('y2', configData.margin.top + configData.title.height);\n}\n\nprivate buildXAxis(o2Common: any): void {\n\n  console.log('in buildXAxis-------------------');\n\n  const cdt = o2Common;\n  const configData = cdt.configData;\n  const svgContainer = cdt.svgContainer;\n\n  const _maxX = cdt.maxXValue;\n  const _graphXScale = cdt.graphXScale;\n\n  const _axisXScale = d3.scaleLinear()\n                  .domain([0, _maxX])\n                  .range([0, _maxX * _graphXScale]);\n\n  svgContainer.append('g')\n      .attr('class', cdt.axisClassName)\n      .attr('transform', cdt.axisXBorderTranslatePos)\n      .call(\n            d3.axisBottom(_axisXScale)\n      );\n            //  .scale()\n            //  .orient(cdt.axisXOrient)\n            //  );\n}\n\n\n\nprivate buildPie(svgContainer: any, configData: any, dataSetJson: any, svgWidth: number, svgHeight: number): void {\n\n  console.log('In  buildPie----------------');\n\n  const _maxX = 100;\n  const _maxY = 100;\n  const cdt = new O2Common(svgContainer, configData, _maxX, _maxY, svgWidth, svgHeight);\n\n  const _color = cdt.defaultColorFunc;\n  const _initPosX = cdt.graphInitXPos;\n  const _initPosY = cdt.graphInitYPos;\n  const _graphHeight = cdt.graphHeight;\n  const _graphWidth = cdt.graphWidth;\n\n  const _opacity = configData.color.opacity;\n  const _titleHeight = configData.title.height;\n  const _leftMargin = configData.margin.left;\n  const _topMargin = configData.margin.top;\n  const _bottomMargin = configData.margin.bottom;\n  const _betweenMargin = configData.margin.between;\n  const _innerRadiusPercent = cdt.innerRadiusPercent;\n  const _graphCenterTranslatePos = cdt.graphCenterTranslatePos;\n  const _pieClassName = configData.className.pie;\n  const _pieValueClassName = configData.className.pieNum;\n  const _pieInnerTitleClassName = configData.className.pieInnerTitle;\n  const _innerRadiusTitleTranslatePos = cdt.innerRadiusTitleTranslatePos;\n  const _innerRadiusTitle = cdt.innerRadiusTitle;\n  const _titleDisplay = configData.title.display;\n  const _legendDisplay = configData.legend.display;\n  const _labelDisplay = configData.label.display;\n  const _valueDisplay = configData.pie.value.display;\n  const _percentDisplay = configData.pie.percent.display;\n  const _animation = configData.animation.enable;\n  const _animationDuration = configData.animation.duration;\n\n  const width = svgWidth;\n  const height = svgHeight;\n\n  const dataSet: Array<number> = new Array();\n  for (const i  in  dataSetJson.data) {\n      if (dataSetJson.data.hasOwnProperty(i)) {\n          const _num = dataSetJson.data[i].value;\n          dataSet.push(_num);\n      }\n  }\n\n  const _sum = d3.sum(dataSet);\n  const pie = d3.pie();\n  const arc = d3.arc()\n              .innerRadius(_graphHeight * _innerRadiusPercent / 100)\n              .outerRadius(_graphHeight / 2);\n\n  const pieElements = svgContainer.selectAll('path')\n                          .data(pie(dataSet))\n                          .enter()\n                          .append('g')\n                          .attr('transform', _graphCenterTranslatePos);\n\n\n  const _makeCenterTitle = (): string => {\n          if (_valueDisplay && _percentDisplay) {\n              const _st = _innerRadiusTitle + ':' + _sum +  ' (100%)';\n              return _st;\n          }\n          if (_percentDisplay) {\n              return '100%';\n          }\n          if (_valueDisplay) {\n              return _innerRadiusTitle + ':' + _sum;\n          }\n  };\n\n  const textElements = svgContainer.append('text')\n                          .attr('class', _pieInnerTitleClassName)\n                          .attr('transform', _innerRadiusTitleTranslatePos )\n                          .text(_makeCenterTitle);\n\n  const _arc = pieElements.append('path')\n              .attr('class', _pieClassName)\n              .style('fill', (d: any, i: number) =>  {\n                  return _color(i);\n              })\n              .attr('fill-opacity', _opacity);\n\n  //  For d3Version4 animation is not available now\n  //  if (_animation) {\n  //      _arc.transition()\n  //      .duration(_animationDuration)\n  //      .delay((d,i)=> {\n  //          return i *1000;\n  //      })\n  //      .attrTween('d',(d: any,i: number) =>  {\n  //          const _interpolate = d3.interpolateObject(\n  //              { startAngle:d.startAngle,endAngle:d.startAngle }\n  //              { startAngle:d.startAngle,endAngle:d.endAngle }\n  //          )\n  //          return (t) {\n  //              return arc(_interpolate(t));\n  //          }\n  //      })\n  //  }\n  //  else{\n  //      _arc.attr('d',arc);\n  //  }\n  _arc.attr('d', arc);\n\n  pieElements.append('text')\n              .attr('class', _pieValueClassName)\n              .attr('transform', (d: any, i: number) => {\n              return 'translate(' + arc.centroid(d) + ')';\n              })\n              .text((d: any, i: number) => {\n                  if (_valueDisplay && _percentDisplay) {\n                      const _percentSt = String(Math.ceil(d.value / _sum  * 100));\n                      const _st = String(d.value) + ' (' + _percentSt + '%)';\n                      return _st;\n                  }\n                  if (_percentDisplay) {\n                      const _percentSt = String(Math.ceil(d.value / _sum  * 100));\n                      const _st = _percentSt + '%';\n                      return _st;\n                  }\n                  if (_valueDisplay) {\n                      return d.value;\n                  }\n              });\n\n  // ---CALL buildTitle-----------------\n  if (_titleDisplay) {\n      this.drawTitle(cdt);\n  }\n\n  // ------------------------------------\n  // ---CALL buildLegend-----------------\n  if (_legendDisplay) {\n      const _legendDataSet: Array<O2LegendData> = new Array();\n      for (const i in dataSetJson.data) {\n          if (dataSetJson.data.hasOwnProperty(i)) {\n              _legendDataSet.push(new O2LegendData(dataSetJson.data[i].name, _color(i)));\n          }\n      }\n      this.buildLegend(cdt, _legendDataSet);\n  }\n}\n\n\n\nprivate buildBar(svgContainer: any, configData: any, dataSetJson: any, svgWidth: number, svgHeight: number): void {\n\n  console.log('In  buildBar----------------');\n\n  const _yDataSet: Array<number> = new Array();\n  for (const i in dataSetJson.data) {\n      if (dataSetJson.data.hasOwnProperty(i)) {\n          for (const j in dataSetJson.data[i].y) {\n              if (dataSetJson.data[i].y.hasOwnProperty(j)) {\n                  const _y = dataSetJson.data[i].y[j];\n                  _yDataSet.push(_y);\n              }\n          }\n      }\n  }\n\n  let _maxX = 0;\n  let _maxY = 0;\n  _maxY = d3.max(_yDataSet);\n  _maxX = 100;\n  const cdt = new O2Common(svgContainer, configData, _maxX, _maxY, svgWidth, svgHeight);\n\n  const _barValueClass = configData.className.barValue;\n  const _color = cdt.defaultColorFunc;\n  const _seriesNum =  dataSetJson.series.length;\n  const _columnNum =  _yDataSet.length;\n  const _initPosX = cdt.graphInitXPos;\n  const _initPosY = cdt.graphInitYPos;\n  const _graphHeight = cdt.graphHeight;\n  const _graphWidth = cdt.graphWidth;\n  const _maxYValue = cdt.maxYValue;\n  const _opacity = configData.color.opacity;\n  const _titleHeight = configData.title.height;\n  const _titleDisplay = configData.title.display;\n  const _leftMargin = configData.margin.left;\n  const _topMargin = configData.margin.top;\n  const _bottomMargin = configData.margin.bottom;\n  const _betweenMargin = configData.margin.between;\n  const _legendDisplay = configData.legend.display;\n  const _labelDisplay = configData.label.display;\n  const _gridYDisplay = configData.grid.y.display;\n  const _animation = configData.animation.enable;\n  const _animationDuration = configData.animation.duration;\n\n  const _barWidth = (_graphWidth - (_betweenMargin * _columnNum / _seriesNum)) /  _columnNum;\n  const _columnWidth = (_graphWidth / _columnNum) ;\n\n  const _graphYScale = cdt.graphYScale;\n\n  const yBarScale = d3.scaleLinear()\n                  .domain([0, _maxY])\n                  .range([_maxY * _graphYScale, 0]);\n\n  const _barPadding = _betweenMargin;\n\n\n\n\n  const grpGraph = svgContainer.selectAll('g')\n      .data(_yDataSet)\n      .enter()\n      .append('g')\n      .attr('transform', (d: any, i: number): string => {\n          const _padding = ((i % _seriesNum) === 0) ? _barPadding : 0;\n          return 'translate(' + (_padding + _columnWidth * i) + ')';\n      })\n      .style('fill', (d: any, i: number) =>  {\n          const _remnant = (i % _seriesNum);\n          return _color(_remnant);\n      })\n      .attr('fill-opacity', _opacity);\n\n  const _rect =  grpGraph.append('rect');\n  if (_animation) {\n      _rect.attr('x', _leftMargin)\n      .attr('height', 0)\n      .attr('y', (d: any): number => {\n          return _initPosY;\n      })\n      .attr('width', _barWidth - _barPadding)\n      .transition()\n      .duration(_animationDuration)\n      .attr('y', (d: any): number => {\n          return yBarScale(d) + _initPosY;\n      })\n      .attr('height', (d: any): number => {\n          return _graphHeight - yBarScale(d) ;\n      });\n  } else {\n      _rect.attr('x', _leftMargin)\n      .attr('y', (d: any): number => {\n          return yBarScale(d) + _initPosY;\n      })\n      .attr('width', _barWidth - _barPadding)\n      .attr('height', (d: any): number => {\n          return _graphHeight - yBarScale(d);\n      });\n  }\n\n  const textBarValue = grpGraph.append('text');\n  textBarValue\n      .attr('class', _barValueClass)\n      .attr('x', _leftMargin)\n      .attr('y', (d: any): number => {\n        return yBarScale(d) + _initPosY;\n      })\n      .text((d: any): string => {\n        return d ;\n      });\n\n  // ------------------------------------\n  // ---CALL buildAxis-----------------\n  this.buildYAxis(cdt);\n\n  //  ------------------------------------\n  //  ---CALL drawXAxisLabel-----------------\n  if (_labelDisplay) {\n      const _labelArray:  Array<string> = new Array();\n      for (const i in dataSetJson.data) {\n          if (dataSetJson.data.hasOwnProperty(i)) {\n              _labelArray.push(dataSetJson.data[i].x);\n          }\n      }\n      this.drawXAxisLabel(cdt, _labelArray, ChartConst.BAR_CHART_TYPE_NAME);\n  }\n\n  this.drawXBaseLine(cdt);\n\n  //  ------------------------------------\n  //  ---CALL buildLegend-----------------\n  const _legendDataSet: Array<O2LegendData> = new Array();\n  for (const i in dataSetJson.series) {\n      if (dataSetJson.series.hasOwnProperty(i)) {\n        _legendDataSet.push(new O2LegendData(dataSetJson.series[i], _color(i)));\n      }\n  }\n  this.buildLegend(cdt, _legendDataSet);\n\n  // ------------------------------------\n  // ---CALL buildTitle-----------------\n  if (_titleDisplay) {\n      this.drawTitle(cdt);\n  }\n\n  if (_gridYDisplay) {\n      this.drawYGrid(cdt);\n  }\n\n}\n\n\nprivate buildLine(svgContainer: any, configData: any, dataSetJson: any, svgWidth: number, svgHeight: number): void {\n\n  console.log('in buildTest-------------------');\n\n  const _groupMaxY: Array<number> = new Array();\n\n  for (const i in dataSetJson.data) {\n      if (dataSetJson.data.hasOwnProperty(i)) {\n          let _gMaxY = 0;\n          for (const j in dataSetJson.data[i].value) {\n              if (dataSetJson.data[i].value.hasOwnProperty(j)) {\n                  if (_gMaxY < dataSetJson.data[i].value[j].y) {\n                      _gMaxY = dataSetJson.data[i].value[j].y;\n                  }\n              }\n          }\n          _groupMaxY.push(_gMaxY) ;\n      }\n  }\n  let _maxX = 0;\n  let _maxY = 0;\n  _maxY = d3.max(_groupMaxY);\n  _maxX = 100;\n\n  const cdt = new O2Common(svgContainer, configData, _maxX, _maxY, svgWidth, svgHeight);\n  const _color = cdt.defaultColorFunc;\n\n  const _columnNum = dataSetJson.data[0].value.length ;\n  const _columnWidth = cdt.graphWidth / _columnNum;\n\n  console.log(_columnWidth);\n\n  if (configData.grid.y.display) {\n      this.drawYGrid(cdt);\n  }\n\n  //  O2IdValueData\n  for (const i in dataSetJson.data) {\n      if (dataSetJson.data.hasOwnProperty(i)) {\n          const _lineArray: Array<O2IdValueData> = new Array();\n          for (const j in dataSetJson.data[i].value) {\n              if (dataSetJson.data[i].value.hasOwnProperty(j)) {\n                  const idValue = new O2IdValueData(parseInt(j, 10), dataSetJson.data[i].value[j].y);\n                  _lineArray.push(idValue);\n              }\n          }\n          const num = parseInt(i, 10);\n          this.drawSingleLine(cdt, _lineArray, num);\n      }\n  }\n\n  // ------------------------------------\n  // ---CALL buildTitle-----------------\n  this.drawTitle(cdt);\n\n  // ------------------------------------\n  // ---CALL buildAxis-----------------\n  this.buildYAxis(cdt);\n\n  this.drawXBaseLine(cdt);\n\n  //  ------------------------------------\n  //  ---CALL drawXAxisLabel-----------------\n  const _labelArray:  Array<string> = new Array();\n  for (const i in dataSetJson.data[0].value) {\n      if (dataSetJson.data[0].value.hasOwnProperty(i)) {\n          _labelArray.push(dataSetJson.data[0].value[i].x);\n      }\n  }\n  this.drawXAxisLabel(cdt, _labelArray, ChartConst.LINE_CHART_TYPE_NAME);\n\n  //  ------------------------------------\n  //  ---CALL buildLegend-----------------\n  const _legendDataSet: Array<O2LegendData> = new Array();\n  for (const i in dataSetJson.data) {\n      if (dataSetJson.data.hasOwnProperty(i)) {\n        _legendDataSet.push(new O2LegendData(dataSetJson.data[i].name, _color(i)));\n      }\n  }\n  this.buildLegend(cdt, _legendDataSet);\n\n}\n\n\n\n\nprivate drawSingleLine(o2Common: any, dataSet: any, lineNum: number): void {\n\n  console.log('in drawSingleLine-------------------');\n\n  console.log(dataSet);\n  const cdt = o2Common;\n  const configData = cdt.configData;\n  const svgContainer = cdt.svgContainer;\n\n  const _maxX = cdt.maxXValue;\n  const _initXPos = cdt.axisXLabelInitXPos;\n  const _initYPos = cdt.axisXLabelInitYPos;\n  const _columnNum = dataSet.length;\n  const _columnWidth = cdt.graphWidth / (_columnNum - 1);\n  const _color = d3.scaleOrdinal(d3.schemeCategory10);\n\n  const _lineClassName = configData.className.multiLinePrefix + String(lineNum);\n  const _leftMargin = configData.margin.left;\n  const _bottomMargin = configData.margin.bottom;\n\n  const _yScale = cdt.graphYScale;\n\n\n  const line = d3.line()\n      .curve(d3.curveLinear)\n      .x( (d: any) => {\n          return _leftMargin + d.id * _columnWidth;\n      })\n      .y( (d: any) => {\n          return cdt.svgHeight - _bottomMargin - ( d.value * _yScale) ;\n      });\n\n  svgContainer.append('path')\n          .attr('class', _lineClassName)\n          .attr('d', line(dataSet));\n          //  .attr('transform', cdt.axisTranslatePos)\n}\n\n\n// ------------------------------------\n// ---Build Legend  -------------------\n// ------------------------------------\nprivate buildLegend(o2Common: any, _legendDataSet: any): void {\n\n  console.log('in buildLegend-------------------');\n\n  //  maxValues are meaningless\n  const cdt = o2Common;\n  const configData = cdt.configData;\n  const svgContainer = cdt.svgContainer;\n  //  const cdt = new O2Common(configData, 100, 100, svgWidth, svgHeight);\n  const legendRectSize = configData.legend.rectWidth;\n  const legendSpacing = 10;\n  const ySpacing = configData.legend.ySpacing;\n  const initPosX = cdt.legendInitXPos;\n  const initPosY = cdt.legendInitYPos;\n  const opacity = configData.color.opacity;\n\n  const grpLegend = svgContainer.append('g')\n              .selectAll('g')\n              .data(_legendDataSet)\n              .enter()\n              .append('g')\n              .attr('class', 'legend')\n              .attr('transform', (d: O2LegendData, i: number) => {\n                  const height = legendRectSize + ySpacing;\n                  const x = initPosX;\n                  const y = i * height + initPosY ;\n                  return 'translate(' + x + ', ' + y + ')';\n              });\n\n  grpLegend.append('rect')\n      .attr('width', legendRectSize)\n      .attr('height', legendRectSize)\n      .style('fill', (d: O2LegendData) => {\n          return d.color;\n      })\n      .style('stroke', (d: O2LegendData) => {\n          return d.color;\n      })\n      .attr('fill-opacity', opacity);\n\n  grpLegend.append('text')\n      .attr('x', legendRectSize + legendSpacing)\n      .attr('y', legendRectSize)\n      .text((d: O2LegendData) => {\n          return d.title;\n      });\n}\n\n\nprivate drawXAxisLabel(o2Common: any, labelDataSet: any, chartType: string): void {\n\n  console.log('in drawXAxisLabel-------------------');\n\n  const cdt = o2Common;\n  const configData = cdt.configData;\n  const svgContainer = cdt.svgContainer;\n\n  // const _maxX = cdt.maxXValue;\n  const _initXPos = cdt.axisXLabelInitXPos;\n  const _initYPos = cdt.axisXLabelInitYPos;\n\n  const _columnNum = labelDataSet.length;\n  let _columnWidth = cdt.graphWidth / _columnNum;\n  if ( chartType === ChartConst.LINE_CHART_TYPE_NAME) {\n      _columnWidth = cdt.graphWidth / (_columnNum - 1);\n  }\n\n  const grpLabel = svgContainer.append('g')\n              .selectAll('g')\n              .data(labelDataSet)\n              .enter()\n              .append('g')\n              .attr('class', configData.axisXText)\n              .attr('transform', (d: any, i: number) => {\n                  const _x = _initXPos + _columnWidth * i;\n                  const _y = _initYPos ;\n                  return 'translate(' + _x + ', ' + _y + ')';\n              });\n\n  grpLabel.append('text')\n              .attr('class', configData.className.axisXText)\n              .text((d: any, i: number) => {\n                  return d;\n              });\n\n\n}\n\n\nprivate drawXBaseLine(o2Common: any): void {\n\n  console.log('in drawXBaseLine-------------------');\n\n  const cdt = o2Common;\n  const svgContainer = cdt.svgContainer;\n\n  svgContainer.append('rect')\n      .attr('class', cdt.axisXBorderLineClassName)\n      .attr('width', cdt.axisXBorderWidth)\n      .attr('height', cdt.axisXBorderLineWidth)\n      .attr('transform', cdt.axisXBorderTranslatePos);\n\n}\n\n\n// ------------------------------------\n// ---Build Axis  -------------------\n// ------------------------------------\nprivate buildYAxis(o2Common: any): void {\n\n  console.log('in buildYAxis-------------------');\n\n  const cdt = o2Common;\n  const svgContainer = cdt.svgContainer;\n\n  const _maxY = cdt.maxYValue;\n  const _graphYScale = cdt.graphYScale;\n\n  const _axisYScale = d3.scaleLinear()\n                  .domain([0, _maxY])\n                  .range([_maxY * _graphYScale, 0]);\n\n  svgContainer.append('g')\n      .attr('class', cdt.axisClassName)\n      .attr('transform', cdt.axisTranslatePos)\n      .call(\n            d3.axisLeft(_axisYScale)\n            );\n\n}\n\n\n// ------------------------------------\n// --- drawTitle-----------------\nprivate drawTitle(o2Common: any): void {\n\n  console.log('in drawTitle-------------------');\n\n  const cdt = o2Common;\n  const configData = cdt.configData;\n  const svgContainer = cdt.svgContainer;\n\n  const _title = configData.title.name;\n  const _xPos = cdt.titleInitXPos;\n  const _yPos = cdt.titleInitYPos;\n  const _titleClassName = configData.title.className;\n\n  svgContainer.append('text')\n      .attr('class', _titleClassName)\n      .attr('x', _xPos)\n      .attr('y', _yPos)\n      .text(_title);\n}\n\n\n// ------------------------------------\n// ---drawGrid  -------------------\n// ------------------------------------\nprivate drawYGrid(o2Common: any): void {\n\n  console.log('in buildYGrid-------------------');\n\n  const cdt = o2Common;\n  const configData = cdt.configData;\n  const svgContainer = cdt.svgContainer;\n\n  const _stepY =  cdt.gridYStep;\n  const _maxY = cdt.maxYValue;\n  const _graphYScale = cdt.graphYScale;\n  const _gridClassName = configData.className.grid;\n  const _rangeY = d3.range(_stepY * _graphYScale,\n                  _maxY * _graphYScale,\n                  _stepY * _graphYScale);\n\n  svgContainer.append('g')\n      .selectAll('line.y')\n      .data(_rangeY)\n      .enter()\n      .append('line')\n      .attr('class', _gridClassName)\n      .attr('x1', configData.margin.left)\n      .attr('y1', ( d: any, i: number ) =>  {\n          const _y1 = cdt.svgHeight - configData.margin.bottom - d;\n          return _y1;\n      })\n      .attr('x2', configData.margin.left + cdt.axisXBorderWidth)\n      .attr('y2', ( d: any, i: number ) =>  {\n          const _y1 = cdt.svgHeight - configData.margin.bottom - d;\n          return _y1;\n      });\n  }\n}","import { NgModule } from '@angular/core';\nimport { Ng6O2ChartComponent } from './ng6-o2-chart.component';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [Ng6O2ChartComponent],\n  exports: [Ng6O2ChartComponent]\n})\nexport class Ng6O2ChartModule { }\n"],"names":["d3.scaleOrdinal","d3.schemeCategory20","d3.schemeCategory10","d3.select","ChartConst.LINE_CHART_TYPE_NAME","ChartConst.BAR_CHART_TYPE_NAME","ChartConst.PIE_CHART_TYPE_NAME","ChartConst.SCATTER_PLOT_CHART_TYPE_NAME","ChartConst.HISTOGRAM_CHART_TYPE_NAME","ChartConst.STACK_BAR_CHART_TYPE_NAME","ChartConst.GEO_MAP_CHART_TYPE_NAME","ChartConst.GEO_ORTHOGRAPHIC_CHART_TYPE_NAME","ChartConst.TREE_CHART_TYPE_NAME","ChartConst.PACK_LAYOUT_CHART_TYPE_NAME","ChartConst.CHOROPLETH_CHART_TYPE_NAME","ChartConst.FORCE_CHART_TYPE_NAME","ChartConst.TREE_MAP_CHART_TYPE_NAME","ChartConst.SANKEY_CHART_TYPE_NAME","d3.format","d3.scaleLinear","d3.histogram","d3.max","d3.forceSimulation","d3.forceLink","d3.forceManyBody","d3.forceCenter","d3.drag","d3.event","d3.interpolateHsl","d3.geoPath","d3.geoMercator","d3.json","d3.pack","d3.hierarchy","d3.tree","d3.geoOrthographic","d3.timer","d3.stack","d3.range","d3.axisBottom","d3.sum","d3.pie","d3.arc","d3.line","d3.curveLinear","d3.axisLeft","Component","ElementRef","Input","NgModule"],"mappings":"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"}
